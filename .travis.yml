services:
- docker
before_install:
# Install aws dependencies
- pip install --user awscli
- export PATH=$PATH:$HOME/.local/bin
# Retrieves docker login command for aws
- LOGIN_STRING=`aws ecr get-login --region us-east-1`
# Executes docker login command
- ${LOGIN_STRING}

- export AWS_REPO=421268985564.dkr.ecr.us-east-1.amazonaws.com/meltwater/executive_alerts_intelligence
- export REPO=meltwater/executive_alerts_intelligence
- docker build -t $REPO:$COMMIT .
# Creates/overrides current branch image
- docker tag -f $REPO:$COMMIT $AWS_REPO:$TAG
# Creates final image for build format: "${branch name}-${build number}"
- docker tag $REPO:$COMMIT $AWS_REPO:$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER
# Pushes images to AWS ECR
- docker push $AWS_REPO

# Tags git
- git config --global user.email "builds@travis-ci.com"
- git config --global user.name "Travis CI"
- export GIT_TAG=build-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER
- git tag $GIT_TAG -a -m "Generated tag from TravisCI build $TRAVIS_BUILD_NUMBER"
- git push origin $GIT_TAG
branches:
  except:
    - /^build-[0-9a-z\-]*/
env:
  global:
  - secure: EGxmOQIrWELMMzUq9a9agh6cwfTwPgk97z/QlQE2kz/8sfKI21RNIjTVI8Yr9bVQVXvZjcq8FMrbYTjSGurLQV/fT/hovNhW8u678J+ZK/xfYkKWWEEmf4HB66iIdK6CnTLc6oElvs6h5VtDnqvt3D0TmR+fV7YeSqCFDzJFsY9a1QripDQw6AsCUQ/u5IRkWlbL8Opnm5m5dHlR3mupYmhaMAjb2bNcCmxFFg2xVleHn3/uMkOskuHS1CcRUzP7mvGTK11RKFsEECCxH2Gxt4s7eTWbf44bNtBTb/8UKRXQLGvk+wr4Za8X2WaD9Oc26jJZ1ndS0wijsOic5PfIslYdzeP+tm00e2KrcGlmzzAuRe66usXZz6lLzOmFoTFh9qJWHcn/z0jpNCEAIETfhxK6rbIe2oAo67Bp5ufJWMt4sp5H8cdwR0G+0drxbyxInFlsNI9okYEsnzzTDOea/bcKvf36moUB5qL0Xylk2O8VdKgT9QE1X1uxdxV9Tsym6eJ+AKdMQlowrtB3aR/1TSlHG2XdGzQx9TrMo1QyaSnbjDa+f7sG+XpVdexcvwdvKcjhppNC6MSpzEGsgUXba9JizPjxuEc109DfxshBjvjrPOWkgColTus7d5a26glxBdss+lRvCcF9xnt9Bx/HyPIBeRGFJwoNGZOgxHioNHo=
  - secure: k2aUyXh0qIqJrsEtte9yWTuo4kwqgJf9bHXnxKe6rR4GwAZW2GGgnS/mljRvo3uYh45NmDr/DSmFSIKzeT/VzvUsdbz3ZoqBr9Ria7NfXEEl30NbrOWrqrX5Ex/AiISKyKXvHD9HY0hiqU8OCHtoheqhOT5WxPpMbK0C30XaNR+WVkm4Dnmbv4d6YY0qVrYgrdcHdHh+swk8VEmnu8NTnLeJtLNMKOJKZ9S94AFAYlUGD8Z8WltxWNUrceGfuS6L+l3Z48FyAT1qVdArgOH3mRfWIA/zZVmQJEe3g/9fpzAU4Zt6bEpvKJn4Ckd2tv4uYoMxRPAQMnEy+eq+FAjCzII99qCdXojBief0AIpwANAwFQfw2H3F9CpHI30e6No5OGWUJjbvCu32TGHQODvcBE+Y4gHaVXUuGY0woOnTO4pe5ejM6ZjF4+Z9kMyNfUdABL1JtgAR12HD09J0TTEb16bz9nWpY1In5Fw+5vwG34fhn6CLYtjVsGbh34sGBgLq31EIXXwBH9+GlbJh4TqsNe3cLG1sFMsUFd4vMfYILD5H+Qb93hyDkkAkCpKo0qVDcx7BtX3x8qNr5QKZFxqaLlmEuiXhh+qqhRcR1FfxLKAwsHGKjh+rAG322D4Z7qclmnxYYIWHAEg7fQiLQg83eRqeFzY71wGLUTohx9Y+kXM=